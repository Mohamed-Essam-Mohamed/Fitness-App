// Mocks generated by Mockito 5.4.5 from annotations
// in fitness_app/test/feature/auth/domain/use_cases/login_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:fitness_app/core/network/common/api_result.dart' as _i4;
import 'package:fitness_app/feature/auth/data/model/request/register_request._model.dart'
    as _i5;
import 'package:fitness_app/feature/auth/domain/entities/forgot_password/change_password_entity.dart'
    as _i9;
import 'package:fitness_app/feature/auth/domain/entities/forgot_password/forgot_password_entity.dart'
    as _i7;
import 'package:fitness_app/feature/auth/domain/entities/forgot_password/verify_code_entity.dart'
    as _i8;
import 'package:fitness_app/feature/auth/domain/entities/login/request/login_request_entity.dart'
    as _i11;
import 'package:fitness_app/feature/auth/domain/entities/login/response/login_response_entity.dart'
    as _i10;
import 'package:fitness_app/feature/auth/domain/repository/auth_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i2.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<String>> registerUser(_i5.RegisterRequestModel? body) =>
      (super.noSuchMethod(
            Invocation.method(#registerUser, [body]),
            returnValue: _i3.Future<_i4.Result<String>>.value(
              _i6.dummyValue<_i4.Result<String>>(
                this,
                Invocation.method(#registerUser, [body]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<String>>);

  @override
  _i3.Future<_i4.Result<_i7.ForgotPasswordEntity>> forgotPassword({
    required String? email,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#forgotPassword, [], {#email: email}),
            returnValue: _i3.Future<_i4.Result<_i7.ForgotPasswordEntity>>.value(
              _i6.dummyValue<_i4.Result<_i7.ForgotPasswordEntity>>(
                this,
                Invocation.method(#forgotPassword, [], {#email: email}),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i7.ForgotPasswordEntity>>);

  @override
  _i3.Future<_i4.Result<_i8.VerifyCodeEntity>> verifyCode({
    required String? code,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#verifyCode, [], {#code: code}),
            returnValue: _i3.Future<_i4.Result<_i8.VerifyCodeEntity>>.value(
              _i6.dummyValue<_i4.Result<_i8.VerifyCodeEntity>>(
                this,
                Invocation.method(#verifyCode, [], {#code: code}),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i8.VerifyCodeEntity>>);

  @override
  _i3.Future<_i4.Result<_i9.ChangePasswordEntity>> changePassword({
    required String? password,
    required String? email,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#changePassword, [], {
              #password: password,
              #email: email,
            }),
            returnValue: _i3.Future<_i4.Result<_i9.ChangePasswordEntity>>.value(
              _i6.dummyValue<_i4.Result<_i9.ChangePasswordEntity>>(
                this,
                Invocation.method(#changePassword, [], {
                  #password: password,
                  #email: email,
                }),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i9.ChangePasswordEntity>>);

  @override
  _i3.Future<_i4.Result<_i10.LoginResponseEntity?>> login(
    _i11.LoginRequestEntity? loginRequest,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#login, [loginRequest]),
            returnValue:
                _i3.Future<_i4.Result<_i10.LoginResponseEntity?>>.value(
                  _i6.dummyValue<_i4.Result<_i10.LoginResponseEntity?>>(
                    this,
                    Invocation.method(#login, [loginRequest]),
                  ),
                ),
          )
          as _i3.Future<_i4.Result<_i10.LoginResponseEntity?>>);
}
